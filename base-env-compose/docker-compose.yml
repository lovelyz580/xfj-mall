version: '3'
services:
 db1:
   image: mysql:5.7
   container_name: mysql
   ports:
    - "3306:3306"
   environment:
    - MYSQL_ROOT_PASSWORD=zhangqiang
    - MYSQL_DATABASE=gp-mall
   privileged: true #解决mysql容器启动后立即退出
   volumes:
    - "/opt/mall-env/custom-config/mysql/data:/var/lib/mysql" #解决数据持久化
    - "/opt/mall-env/custom-config/mysql/config:/etc/mysql/conf.d" #加载自定义配置文件
    - "/opt/mall-env/custom-config/mysql/log:/var/log/mysql" #指定mysql日志输出目录
    
 elasticsearch:
   image: elasticsearch:6.4.0
   container_name: es
   environment:
    - "cluster.name=elasticsearch" #设置集群名称为elasticsearch
    - "discovery.type=single-node" #以单一节点模式启动
    - "ES_JAVA_OPTS=-Xms200m -Xmx200m" #设置使用jvm内存大小
   volumes:
    - "/opt/mall-env/custom-config/es/plugins:/usr/share/elasticsearch/plugins" #插件文件挂载
    - "/opt/mall-env/custom-config/es/data:/usr/share/elasticsearch/data" #数据文件挂载
   ports:
    - 9200:9200
      
 kibana:
   image: kibana:6.4.0
   container_name: kibana
   links:
    - elasticsearch:es #可以用es这个域名访问elasticsearch服务
   depends_on:
    - elasticsearch #kibana在elasticsearch启动之后再启动
   environment:
    - "elasticsearch.hosts=http://es:9200" #设置访问elasticsearch的地址
   ports:
    - 5601:5601
    
 kafka:
  image: wurstmeister/kafka
  container_name: kafka
  depends_on:
      - zookeeper
  ports:
    - "9092:9092"
  volumes:
    - "/opt/mall-env/custom-config/kafka/logs:/opt/kafka_2.12-2.3.0/logs" #日志文件
  environment:
    KAFKA_ADVERTISED_HOST_NAME: 121.36.1.22
    KAFKA_ADVERTISED_PORT: 9092
    #      HOSTNAME_COMMAND: "cat /etc/hosts | tail -1 | awk '{print $$1}'"
    #      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://_{HOSTNAME_COMMAND}:9094
    #      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
    #      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
    #      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    KAFKA_JVM_PERFORMANCE_OPTS: "-Xmx300m -Xms300m"
    
 redis:
   image: redis:3.2
   container_name: redis
   command: redis-server --appendonly yes
   volumes:
    - "/opt/mall-env/custom-config/redis/data:/data" #数据文件挂载
   ports:
    - 6379:6379 
      
 zookeeper:
    image: wurstmeister/zookeeper
    container_name: zook
    hostname: zook
    ports:
      - "2181:2181"
      
 rabbitmq:
    image: rabbitmq:management
    ports:
      - "4369:4369"
      - "5671:5671"
      - "25672:25672"
      - "5672:5672"
      - "15672:15672"
    container_name: rabbitmq
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: zhangqiang
      RABBITMQ_NODENAME: rabbitmq
      RABBITMQ_ERLANG_COOKIE: CURIOAPPLICATION
 
 duboo-admin:
    image: chenchuxin/dubbo-admin
    container_name: dub-admin
    depends_on:
      - zookeeper
    ports:
      - "8080:8080"
    volumes:
      - "/opt/mall-env/custom-config/dubbo-admin/logs:/usr/local/tomcat/logs" #指定日志文件目录
    environment:
      - dubbo.registry.address=zookeeper://121.36.1.22:2181
      - dubbo.admin.root.password=root
      - dubbo.admin.guest.password=guest
      - dubbo-group.address=dubbo-prod     
 nginx:
    image: nginx
    container_name: nginx
    volumes:
      - "/opt/mall-env/custom-config/nginx/conf/nginx.conf:/etc/nginx/conf.d/default.conf" #持久化配置文件
      - "/opt/image/userHead:/home/image/" #持久化头像图片存放路径
    ports:
      - "80:80"
    environment:
      - NGINX_HOST=foobar.com
      - NGINX_PORT=80